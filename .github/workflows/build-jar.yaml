---
name: Build and Deploy AMI
on:
  push:
    branches:
      - main
jobs:
  build:
    if: github.repository_owner == 'CSYE6225-Amit-Anveri'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: "17"
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*',
            '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Run Tests
        run: gradle test
      - name: Build JAR
        run: gradle build
      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v3
        with:
          name: webapp-jar
          path: build/libs/webapp-0.0.1-SNAPSHOT.jar
  deploy:
    if: github.repository_owner == 'CSYE6225-Amit-Anveri'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Download JAR Artifact
        uses: actions/download-artifact@v3
        with:
          name: webapp-jar
      - name: List files after downloading artifact
        run: ls -R
      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Set instance type
        run: echo "INSTANCE_TYPE=${{ env.INSTANCE_TYPE }}" >> $GITHUB_ENV
      - name: Print Environment Variables
        run: printenv
      - name: Install Packer
        run: >
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -

          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"

          sudo apt-get update && sudo apt-get install packer
      - name: Initialize Packer in packer directory
        run: |
          cd packer/
          packer init main.pkr.hcl
      - name: Deploy AMI with Packer
        id: packer
        run: >
          cd packer

          packer build -var "artifact_path=../webapp-0.0.1-SNAPSHOT.jar" \
                       -var "instance_type=${{ secrets.INSTANCE_TYPE }}" \
                       -var "source_ami=${{ secrets.SOURCE_AMI }}" \
                       -machine-readable main.pkr.hcl | tee build.log
          AMI_ID=$(awk -F, '$0 ~/artifact,0,id/ {print $6}' build.log | sed 's/.*ami-/ami-/')

          echo "AMI_ID=$AMI_ID" >> $GITHUB_ENV
      - name: Share AMI with target account
        run: >
          aws ec2 modify-image-attribute --image-id ${{ env.AMI_ID }} \
                                         --launch-permission "{\"Add\":[{\"UserId\":\"${{ secrets.TARGET_ACCOUNT_ID }}\"}]}"
